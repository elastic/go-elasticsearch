// generated by github.com/elastic/goelasticsearch/cmd/generator; DO NOT EDIT

package client

import (
	"fmt"
	"net/http"
	"reflect"
	"runtime"
)

// MsearchTemplate - the multi search API allows to execute several search requests within the same API. See http://www.elastic.co/guide/en/elasticsearch/reference/current/search-multi-search.html for more info.
//
// body: the request definitions (metadata-search request definition pairs), separated by newlines.
//
// options: optional parameters. Supports the following functional options: WithIndex, WithType, WithSearchType, WithTypedKeys, see the Option type in this package for more info.
func (c *Client) MsearchTemplate(body map[string]interface{}, options ...Option) (*http.Response, error) {
	supportedOptions := map[string]struct{}{
		"WithIndex":      struct{}{},
		"WithType":       struct{}{},
		"WithSearchType": struct{}{},
		"WithTypedKeys":  struct{}{},
	}
	for _, option := range options {
		name := runtime.FuncForPC(reflect.ValueOf(option).Pointer()).Name()
		if _, ok := supportedOptions[name]; !ok {
			return nil, fmt.Errorf("unsupported option: %s", name)
		}
	}
	req := &http.Request{
		Method: "GET",
	}
	return c.client.Do(req)
}
