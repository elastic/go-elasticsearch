// generated by github.com/elastic/goelasticsearch/cmd/generator; DO NOT EDIT

package indices

import (
	"fmt"
	"net/http"
	"reflect"
	"runtime"
)

// Stats - indices level stats provide statistics on different operations happening on an index. See http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-stats.html for more info.
//
// options: optional parameters. Supports the following functional options: WithCompletionFields, WithErrorTrace, WithFielddataFields, WithFields, WithFilterPath, WithGroups, WithHuman, WithIncludeSegmentFileSizes, WithIndex, WithLevel, WithMetric, WithPretty, WithSourceParam, WithTypes, see the Option type in this package for more info.
func (i *Indices) Stats(options ...Option) (*http.Response, error) {
	supportedOptions := map[string]struct{}{
		"WithCompletionFields":        struct{}{},
		"WithErrorTrace":              struct{}{},
		"WithFielddataFields":         struct{}{},
		"WithFields":                  struct{}{},
		"WithFilterPath":              struct{}{},
		"WithGroups":                  struct{}{},
		"WithHuman":                   struct{}{},
		"WithIncludeSegmentFileSizes": struct{}{},
		"WithIndex":                   struct{}{},
		"WithLevel":                   struct{}{},
		"WithMetric":                  struct{}{},
		"WithPretty":                  struct{}{},
		"WithSourceParam":             struct{}{},
		"WithTypes":                   struct{}{},
	}
	for _, option := range options {
		name := runtime.FuncForPC(reflect.ValueOf(option).Pointer()).Name()
		if _, ok := supportedOptions[name]; !ok {
			return nil, fmt.Errorf("unsupported option: %s", name)
		}
	}
	req := &http.Request{
		Method: "GET",
	}
	return i.client.Do(req)
}
