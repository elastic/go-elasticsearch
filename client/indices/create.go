// generated by github.com/elastic/goelasticsearch/cmd/generator; DO NOT EDIT

package indices

import (
	"fmt"
	"net/http"
	"net/url"
)

// Create - the create index API allows to instantiate an index. See http://www.elastic.co/guide/en/elasticsearch/reference/master/indices-create-index.html for more info.
//
// index: the name of the index.
//
// body: the configuration for the index ("settings" and "mappings").
//
// options: optional parameters. Supports the following functional options: WithErrorTrace, WithFilterPath, WithHuman, WithMasterTimeout, WithPretty, WithSourceParam, WithTimeout, WithUpdateAllTypes, WithWaitForActiveShards, see the Option type in this package for more info.
func (i *Indices) Create(index string, body map[string]interface{}, options ...*Option) (*http.Response, error) {
	supportedOptions := map[string]struct{}{
		"WithErrorTrace":          struct{}{},
		"WithFilterPath":          struct{}{},
		"WithHuman":               struct{}{},
		"WithMasterTimeout":       struct{}{},
		"WithPretty":              struct{}{},
		"WithSourceParam":         struct{}{},
		"WithTimeout":             struct{}{},
		"WithUpdateAllTypes":      struct{}{},
		"WithWaitForActiveShards": struct{}{},
	}
	req := &http.Request{
		URL: &url.URL{
			Scheme: i.transport.Scheme,
			Host:   i.transport.Host,
		},
		Method: "PUT",
	}
	for _, option := range options {
		if _, ok := supportedOptions[option.name]; !ok {
			return nil, fmt.Errorf("unsupported option: %s", option.name)
		}
		option.apply(req)
	}
	return i.transport.Do(req)
}
