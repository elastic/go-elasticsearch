// generated by github.com/elastic/goelasticsearch/cmd/generator; DO NOT EDIT

package indices

import (
	"net/http"
	"time"
)

// Option is a non-required API option that gets applied to an HTTP request.
type Option func(r *http.Request)

// WithAllowNoIndices whether to ignore if a wildcard indices expression resolves into no concrete indices. (This includes _all string or when no indices have been specified).
func WithAllowNoIndices(allowNoIndices bool) Option {
	return func(r *http.Request) {
	}
}

// WithCreate whether the index template should only be added if new or can also replace an existing one.
func WithCreate(create bool) Option {
	return func(r *http.Request) {
	}
}

// WithDryRun if set to true the rollover action will only be validated but not actually performed even if a condition matches. The default is false.
func WithDryRun(dryRun bool) Option {
	return func(r *http.Request) {
	}
}

// WithExpandWildcards whether to expand wildcard expression to concrete indices that are open, closed or both.
func WithExpandWildcards(expandWildcards struct{}) Option {
	return func(r *http.Request) {
	}
}

// WithFeature a comma-separated list of features.
func WithFeature(feature []string) Option {
	return func(r *http.Request) {
	}
}

// WithFlatSettings return settings in flat format (default: false).
func WithFlatSettings(flatSettings bool) Option {
	return func(r *http.Request) {
	}
}

// WithFormat format of the output.
func WithFormat(format struct{}) Option {
	return func(r *http.Request) {
	}
}

// WithIgnoreUnavailable whether specified concrete indices should be ignored when unavailable (missing or closed).
func WithIgnoreUnavailable(ignoreUnavailable bool) Option {
	return func(r *http.Request) {
	}
}

// WithIndex the name of the index to scope the operation.
func WithIndex(index string) Option {
	return func(r *http.Request) {
	}
}

// WithIndexParam the name of the index to scope the operation.
func WithIndexParam(indexParam string) Option {
	return func(r *http.Request) {
	}
}

// WithLocal return local information, do not retrieve the state from master node (default: false).
func WithLocal(local bool) Option {
	return func(r *http.Request) {
	}
}

// WithMasterTimeout specify timeout for connection to master.
func WithMasterTimeout(masterTimeout time.Time) Option {
	return func(r *http.Request) {
	}
}

// WithName the comma separated names of the index templates.
func WithName(name []string) Option {
	return func(r *http.Request) {
	}
}

// WithNewIndex the name of the rollover index.
func WithNewIndex(newIndex string) Option {
	return func(r *http.Request) {
	}
}

// WithOrder the order for this template when merging multiple matching ones (higher numbers are merged later, overriding the lower numbers).
func WithOrder(order int) Option {
	return func(r *http.Request) {
	}
}

// WithPreferLocal with true, specify that a local shard should be used if available, with false, use a random shard (default: true).
func WithPreferLocal(preferLocal bool) Option {
	return func(r *http.Request) {
	}
}

// WithTimeout explicit operation timeout.
func WithTimeout(timeout time.Time) Option {
	return func(r *http.Request) {
	}
}

// WithUpdateAllTypes whether to update the mapping for all fields with the same name across all types or not.
func WithUpdateAllTypes(updateAllTypes bool) Option {
	return func(r *http.Request) {
	}
}

// WithWaitForActiveShards set the number of active shards to wait for before the operation returns.
func WithWaitForActiveShards(waitForActiveShards string) Option {
	return func(r *http.Request) {
	}
}
