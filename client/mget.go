// generated by github.com/elastic/goelasticsearch/cmd/generator; DO NOT EDIT

package client

import (
	"fmt"
	"net/http"
	"reflect"
	"runtime"
)

// Mget - multi GET API allows to get multiple documents based on an index, type (optional) and id (and possibly routing). See http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-multi-get.html for more info.
//
// body: document identifiers; can be either docs (containing full document information) or ids (when index and type is provided in the URL.
//
// options: optional parameters. Supports the following functional options: WithIndex, WithType, WithSource, WithSourceExclude, WithSourceInclude, WithPreference, WithRealtime, WithRefresh, WithRouting, WithStoredFields, see the Option type in this package for more info.
func (c *Client) Mget(body map[string]interface{}, options ...Option) (*http.Response, error) {
	supportedOptions := map[string]struct{}{
		"WithIndex":         struct{}{},
		"WithType":          struct{}{},
		"WithSource":        struct{}{},
		"WithSourceExclude": struct{}{},
		"WithSourceInclude": struct{}{},
		"WithPreference":    struct{}{},
		"WithRealtime":      struct{}{},
		"WithRefresh":       struct{}{},
		"WithRouting":       struct{}{},
		"WithStoredFields":  struct{}{},
	}
	for _, option := range options {
		name := runtime.FuncForPC(reflect.ValueOf(option).Pointer()).Name()
		if _, ok := supportedOptions[name]; !ok {
			return nil, fmt.Errorf("unsupported option: %s", name)
		}
	}
	req := &http.Request{
		Method: "GET",
	}
	return c.client.Do(req)
}
