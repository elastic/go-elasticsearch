// generated by github.com/elastic/goelasticsearch/cmd/generator; DO NOT EDIT

package client

import (
	"net/http"
	"time"
)

// Option is a non-required API option that gets applied to an HTTP request.
type Option func(r *http.Request)

// WithType default document type for items which don&#39;t provide one.
func WithType(documentType string) Option {
	return func(r *http.Request) {
	}
}

// WithTypeParam default document type for items which don&#39;t provide one.
func WithTypeParam(documentTypeParam string) Option {
	return func(r *http.Request) {
	}
}

// WithFields default comma-separated list of fields to return in the response for updates, can be overridden on each sub-request.
func WithFields(fields []string) Option {
	return func(r *http.Request) {
	}
}

// WithID document ID.
func WithID(id string) Option {
	return func(r *http.Request) {
	}
}

// WithIndex default index for items which don&#39;t provide one.
func WithIndex(index string) Option {
	return func(r *http.Request) {
	}
}

// WithOpType explicit operation type.
func WithOpType(opType struct{}) Option {
	return func(r *http.Request) {
	}
}

// WithParent ID of the parent document.
func WithParent(parent string) Option {
	return func(r *http.Request) {
	}
}

// WithPipeline the pipeline id to preprocess incoming documents with.
func WithPipeline(pipeline string) Option {
	return func(r *http.Request) {
	}
}

// WithRefresh if true then refresh the effected shards to make this operation visible to search, if wait_for then wait for a refresh to make this operation visible to search, if false (the default) then do nothing with refreshes.
func WithRefresh(refresh struct{}) Option {
	return func(r *http.Request) {
	}
}

// WithRouting specific routing value.
func WithRouting(routing string) Option {
	return func(r *http.Request) {
	}
}

// WithScrollID a comma-separated list of scroll IDs to clear.
func WithScrollID(scrollID []string) Option {
	return func(r *http.Request) {
	}
}

// WithSource true or false to return the _source field or not, or default list of fields to return, can be overridden on each sub-request.
func WithSource(source []string) Option {
	return func(r *http.Request) {
	}
}

// WithSourceExclude default list of fields to exclude from the returned _source field, can be overridden on each sub-request.
func WithSourceExclude(sourceExclude []string) Option {
	return func(r *http.Request) {
	}
}

// WithSourceInclude default list of fields to extract and return from the _source field, can be overridden on each sub-request.
func WithSourceInclude(sourceInclude []string) Option {
	return func(r *http.Request) {
	}
}

// WithTaskID the task id to rethrottle.
func WithTaskID(taskID string) Option {
	return func(r *http.Request) {
	}
}

// WithTimeout explicit operation timeout.
func WithTimeout(timeout time.Time) Option {
	return func(r *http.Request) {
	}
}

// WithWaitForActiveShards sets the number of shard copies that must be active before proceeding with the bulk operation. Defaults to 1, meaning the primary shard only. Set to all for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas &#43; 1).
func WithWaitForActiveShards(waitForActiveShards string) Option {
	return func(r *http.Request) {
	}
}
