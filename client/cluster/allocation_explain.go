// generated by github.com/elastic/goelasticsearch/cmd/generator; DO NOT EDIT

package cluster

import (
	"fmt"
	"net/http"
	"net/url"
)

// AllocationExplain - the purpose of the cluster allocation explain API is to provide explanations for shard allocations in the cluster. See http://www.elastic.co/guide/en/elasticsearch/reference/master/cluster-allocation-explain.html for more info.
//
// body: the index, shard, and primary flag to explain. Empty means 'explain the first unassigned shard'.
//
// options: optional parameters. Supports the following functional options: WithErrorTrace, WithFilterPath, WithHuman, WithIncludeDiskInfo, WithIncludeYesDecisions, WithPretty, WithSourceParam, see the Option type in this package for more info.
func (c *Cluster) AllocationExplain(body map[string]interface{}, options ...*Option) (*http.Response, error) {
	supportedOptions := map[string]struct{}{
		"WithErrorTrace":          struct{}{},
		"WithFilterPath":          struct{}{},
		"WithHuman":               struct{}{},
		"WithIncludeDiskInfo":     struct{}{},
		"WithIncludeYesDecisions": struct{}{},
		"WithPretty":              struct{}{},
		"WithSourceParam":         struct{}{},
	}
	req := &http.Request{
		URL: &url.URL{
			Scheme: c.transport.Scheme,
			Host:   c.transport.Host,
		},
		Method: "GET",
	}
	for _, option := range options {
		if _, ok := supportedOptions[option.name]; !ok {
			return nil, fmt.Errorf("unsupported option: %s", option.name)
		}
		option.apply(req)
	}
	return c.transport.Do(req)
}
