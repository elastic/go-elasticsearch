[[requests]]
==== Requests

Requests are modeled around structures that follows as closely as possible the {es} API and uses the standard `json/encoding` for serialization.
Corresponding request can be found withing the same package as its endpoint and comes with a Builder that allows you to deep dive into the API by following the types.

The builder is particularly useful around pointer fields and is embeddable within a standard struct declaration, such that these two declarations give you the same result:

[source,go]
------------------------------------
types.QueryContainer{
    Term: map[types.Field]types.TermQuery{
        "name": {Value: "Foo"},
    },
}
types.QueryContainer{
    Term: map[types.Field]types.TermQuery{
        "name": types.NewTermQueryBuilder().Value(types.NewFieldValueBuilder().String("Foo")).Build(),
    },
}
------------------------------------