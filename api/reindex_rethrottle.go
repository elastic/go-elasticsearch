// generated by github.com/elastic/go-elasticsearch/cmd/generator; DO NOT EDIT

package api

import (
	"fmt"
	"net/http"
	"net/url"
)

// ReindexRethrottle - reindex does not attempt to set up the destination index. See https://www.elastic.co/guide/en/elasticsearch/reference/5.x/docs-reindex.html for more info.
//
// taskID: the task id to rethrottle.
//
// requestsPerSecond: the throttle to set on this request in floating sub-requests per second. -1 means set no throttle.
//
// options: optional parameters. Supports the following functional options: WithTaskID, WithErrorTrace, WithFilterPath, WithHuman, WithPretty, WithSourceParam, see the Option type in this package for more info.
func (a *API) ReindexRethrottle(taskID string, requestsPerSecond int, options ...*Option) (*ReindexRethrottleResponse, error) {
	req := &http.Request{
		URL: &url.URL{
			Scheme: a.transport.URL.Scheme,
			Host:   a.transport.URL.Host,
		},
		Method: "POST",
	}
	methodOptions := supportedOptions["ReindexRethrottle"]
	for _, option := range options {
		if _, ok := methodOptions[option.name]; !ok {
			return nil, fmt.Errorf("unsupported option: %s", option.name)
		}
		option.apply(req)
	}
	resp, err := a.transport.Do(req)
	return &ReindexRethrottleResponse{resp}, err
}

// ReindexRethrottleResponse is the response for ReindexRethrottle
type ReindexRethrottleResponse struct {
	Response *http.Response
	// TODO: fill in structured response
}
