/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package generator

import (
	"bytes"
	"path/filepath"
	"testing"
)

func TestGenerate(t *testing.T) {
	m, err := newMethod(filepath.Join("..", DefaultSpecDir, "index.json"))
	if err != nil {
		t.Fatal(err)
	}
	var writer bytes.Buffer
	err = m.generate(filepath.Join("..", templatesDir), &writer)
	if err != nil {
		t.Fatal(err)
	}
	expectedCode := `// generated by github.com/elastic/elasticsearch-go/cmd/generator; DO NOT EDIT

package client

// Index is documented at http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-index_.html
// index the name of the index
// documentType the type of the document
// Optional arguments:
// - WithID() document ID
// - WithOpType() explicit operation type
// - WithParent() ID of the parent document
// - WithPipeline() the pipeline id to preprocess incoming documents with
// - WithRefresh() if true then refresh the affected shards to make this operation visible to search, if wait_for then wait for a refresh to make this operation visible to search, if false (the default) then do nothing with refreshes.
// - WithRouting() specific routing value
// - WithTimeout() explicit operation timeout
// - WithTimestamp() explicit timestamp for the document
// - WithTTL() expiration time for the document
// - WithVersion() explicit version number for concurrency control
// - WithVersionType() specific version type
// - WithWaitForActiveShards() sets the number of shard copies that must be active before proceeding with the index operation. Defaults to 1, meaning the primary shard only. Set to all for all shard copies, otherwise set to any non-negative value less than or equal to the total number of copies for the shard (number of replicas + 1)
func (c *Client) Index(index string, documentType string, opt ...Option) (*http.Response, error) {
	req := &http.Request{
		Method: "POST",
	}
	return c.client.Do(req)
}
`
	if d := diff(t, expectedCode, writer.String()); len(d) > 0 {
		t.Fail()
	}
}
