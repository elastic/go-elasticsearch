/*
 * Licensed to Elasticsearch under one or more contributor
 * license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright
 * ownership. Elasticsearch licenses this file to you under
 * the Apache License, Version 2.0 (the "License"); you may
 * not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied.  See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */

package generator

import (
	"fmt"
	"io/ioutil"
	"path/filepath"
	"testing"
)

func TestExecuteTemplate(t *testing.T) {
	api := "index"
	methodName := "Index"
	docURL := "http://www.elastic.co/guide/en/elasticsearch/reference/master/docs-" + api + "_.html"
	rootDir, err := ioutil.TempDir("", "root")
	if err != nil {
		t.Fatal(err)
	}
	m, err := newMethod(filepath.Join("..", DefaultSpecDir, "index.json"))
	if err != nil {
		t.Fatal(err)
	}
	apiFile := filepath.Join(rootDir, "api", "index") + ".go"
	err = m.generate(filepath.Join("..", templatesDir), rootDir)
	if err != nil {
		t.Fatal(err)
	}
	expectedCode := fmt.Sprintf(`// generated by github.com/elastic/elasticsearch-go/cmd/generator; DO NOT EDIT

package api

// %s is documented at %s
func (a *API) %s(documentType string, index string, opt ...Option) (*http.Response, error){
	req := &http.Request{
		Method: "POST",
	}
	return a.client.Do(req)
}
`, methodName, docURL, methodName)
	code, err := ioutil.ReadFile(apiFile)
	if err != nil {
		t.Fatal(err)
	}
	if string(code) != expectedCode {
		t.Fatalf("Expected the generation of:\n\n%q\n\nbut got:\n\n%q", expectedCode, code)
	}
}
