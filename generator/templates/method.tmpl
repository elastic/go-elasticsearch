// generated by github.com/elastic/goelasticsearch/cmd/generator; DO NOT EDIT

package {{.PackageName}}

import (
	"fmt"
	"net/http"
	"net/url"
)

// {{.MethodName}}{{.Spec.Documentation}}{{range .RequiredURLParts}}
//
// {{.Name}}: {{.Description}}{{end}}{{range .RequiredURLParams}}
//
// {{.Name}}: {{.Description}}{{end}}
//
// options: optional parameters. Supports the following functional options: {{range .OptionalURLParts}}{{.OptionName}}, {{end}}{{range .OptionalURLParams}}{{.OptionName}}, {{end}}see the Option type in this package for more info.
func ({{.ReceiverName}} *{{.TypeName}}) {{.MethodName}}({{range .RequiredURLParts}}{{.Name}} {{.Type}}, {{end}}{{range .RequiredURLParams}}{{.Name}} {{.Type}}, {{end}}options ...*Option) (*http.Response, error) {
	supportedOptions := map[string]struct{}{
		{{range .OptionalURLParts}}"{{.OptionName}}": struct{}{},
	{{end}}{{range .OptionalURLParams}}"{{.OptionName}}": struct{}{},
{{end}}}
	req := &http.Request{
		URL: &url.URL{
			Scheme: {{.ReceiverName}}.transport.URL.Scheme,
			Host:   {{.ReceiverName}}.transport.URL.Host,
		},
		Method: "{{.HTTPMethod}}",
	}
	for _, option := range options{
		if _, ok := supportedOptions[option.name]; !ok {
			return nil, fmt.Errorf("unsupported option: %s", option.name)
		}
		option.apply(req)
	}
	return {{.ReceiverName}}.transport.Do(req)
}
